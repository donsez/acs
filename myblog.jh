// https://www.jhipster.tech/jdl/

application {
  config {
    applicationType monolith,
    baseName myblog
    packageName acs.myblog,
    authenticationType jwt,
    prodDatabaseType mysql,
    devDatabaseType h2Disk,
    buildTool maven,
    searchEngine elasticsearch,
    testFrameworks [protractor, cucumber, gatling],
    clientFramework angularX,
    useSass true,
    enableTranslation true,
    nativeLanguage en,
    languages [fr, en, es]
  }
  entities Blog, Entry, Comment // Rate
}


NAME_LENGTH = 3
TEXT_MAX_LENGTH = 50000
COMMENT_MAX_LENGTH = 2000
IMAGE_MAX_LENGTH = 1000000

/** The blog */
entity Blog {
  /** The name */
    name String required minlength(NAME_LENGTH),
  /** The handle */
    handle String required minlength(2),
    createdAt ZonedDateTime required,
}
paginate Blog with pagination

/** The blog entry */
entity Entry {
    title String required,
    content TextBlob required maxbytes(TEXT_MAX_LENGTH),
    photo ImageBlob maxbytes(IMAGE_MAX_LENGTH),
    createdAt ZonedDateTime required,
    updatedAt ZonedDateTime
}

/** The user comment */
entity Comment {
    comment TextBlob required maxbytes(COMMENT_MAX_LENGTH),
    photo ImageBlob maxbytes(IMAGE_MAX_LENGTH),
    createdAt ZonedDateTime required,
    updatedAt ZonedDateTime
}
paginate Comment with infinite-scroll

relationship ManyToOne {
    Blog{user(login)} to User,
    Entry{blog(name)} to Blog,
    Comment{entry(title)} to Entry,
    Comment{commenter(login)} to User
}
paginate Entry with infinite-scroll

///** The rate */
//entity Rate {
//    rate Integer min(-1) max(1),
//    createdAt ZonedDateTime,
//    updatedAt ZonedDateTime
//}

dto * with mapstruct
service all with serviceImpl
//angularSuffix * with acs
//microservice * with acs
//search * with elasticsearch
// TODO Exercice : add entity Comment
